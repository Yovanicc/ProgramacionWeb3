const mysql = require('mysql2/promise');

async function main() {
  console.log('üîπ Iniciando conexi√≥n con promesas...');
  console.time('‚è±Ô∏è Tiempo total (Conexi√≥n con Promesas)');

  try {
    const connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'mi_base_de_datos',
    });

    console.log('‚úÖ Conectado a MySQL');

    // üîπ Obtiene usuarios
    const [rows] = await connection.execute('SELECT * FROM usuarios');
    console.log('üìã Usuarios:', rows);

    // üîπ Inserta usuario
    async function insertarUsuario(nombre, apellido, email, edad, telefono) {
      const [result] = await connection.execute(
        'INSERT INTO usuarios (nombre, apellido, email, edad, telefono) VALUES (?, ?, ?, ?, ?)',
        [nombre, apellido, email, edad, telefono]
      );
      console.log(`‚úÖ Usuario insertado con ID: ${result.insertId}`);
    }

    // üîπ Busca usuario por ID
    async function buscarUsuarioPorId(id) {
      const [rows] = await connection.execute(
        'SELECT * FROM usuarios WHERE id = ?',
        [id]
      );
      console.log(rows.length ? '‚úÖ Usuario encontrado:' : '‚ö†Ô∏è No encontrado', rows[0]);
    }

    // üîπ Actualiza usuario
    async function actualizarUsuario(id, nuevoTelefono) {
      const [result] = await connection.execute(
        'UPDATE usuarios SET telefono = ? WHERE id = ?',
        [nuevoTelefono, id]
      );
      console.log(result.affectedRows ? '‚úÖ Usuario actualizado' : '‚ö†Ô∏è No encontrado.');
    }

    // üîπ Ejecuta ejemplos
    await insertarUsuario('Maria', 'Gomez', 'maria@gmail.com', 28, '555123456');
    await buscarUsuarioPorId(1);
    await actualizarUsuario(1, '777888999');

    await connection.end();
    console.log('üîπ Conexi√≥n cerrada.');
  } catch (err) {
    console.error('‚ùå Error de conexi√≥n:', err.message);
  }

  console.timeEnd('‚è±Ô∏è Tiempo total (Conexi√≥n con Promesas)');
}

main();
